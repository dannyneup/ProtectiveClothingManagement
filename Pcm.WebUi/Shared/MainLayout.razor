@using Colors = Pcm.Core.Colors
@inherits LayoutComponentBase

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" Theme="CustomTheme"/>
<MudDialogProvider
    CloseButton="true"
    FullWidth="true"
    MaxWidth="MaxWidth.Large"/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="1" Dense="false">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer"/>
        <MudSpacer/>
        <img src="logo.svg"
             width="40px"
             class="appbar-icon"
             alt="Logo -SWRAG"/>
    </MudAppBar>
    <MudDrawer @bind-Open="@_isDrawerOpen" ClipMode="DrawerClipMode.Always" Elevation="1" Variant="@DrawerVariant.Responsive">
        <MudNavMenu>
            <MudNavLink Href="/trainees" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Person"/>
            <MudNavLink Href="/trainings" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.List"/>
            <MudNavLink Href="/editor" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Edit">Editor</MudNavLink>
            <!-- <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.SpaceDashboard"/>
            <MudNavLink Href="/articles" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Checkroom"/>
            <MudNavLink Href="/orders" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.ShoppingBag"/>
            <MudNavLink Href="/requests" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.NoteAdd"/> -->
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        <div class="main-body">
            <MudContainer MaxWidth="MaxWidth.Large">
                @Body
            </MudContainer>
        </div>
    </MudMainContent>
</MudLayout>

@code {

    readonly MudTheme CustomTheme = new()
    {
        Palette = new Palette
        {
            Primary = Colors.Primary,
            Secondary = Colors.Secondary,
            Tertiary = Colors.Tertiary,
            AppbarBackground = Colors.Primary
        },
        PaletteDark = new PaletteDark
        {
            Primary = Colors.Primary,
            Secondary = Colors.Secondary,
            Tertiary = Colors.Tertiary
        }
    };

    private bool _isDarkMode;
    private bool _isDrawerOpen = true;
    private MudThemeProvider _mudThemeProvider = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }

    void ToggleDrawer()
    {
        _isDrawerOpen = !_isDrawerOpen;
    }

}