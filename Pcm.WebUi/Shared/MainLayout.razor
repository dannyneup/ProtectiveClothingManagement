@using Colors = Pcm.Core.Colors
@inherits LayoutComponentBase

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" Theme="CustomTheme"/>
<MudDialogProvider
    CloseButton="true"
    FullWidth="true"
    MaxWidth="MaxWidth.Large"/>
<MudSnackbarProvider/>

<MudLayout>
    <MudDrawer Width="60px" Class="py-3" Elevation="1" Variant="DrawerVariant.Mini">
        <div style="height: 52px">
            <img src="logo.svg" width="40px" style="margin-left: 10px"/>
        </div>
        <MudNavMenu>
            <MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.SpaceDashboard"/>
            <MudNavLink Href="/persons" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Person"/>
            <MudNavLink Href="/articles" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Checkroom"/>
            <MudNavLink Href="/trainings" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.BusinessCenter"/>
            <MudNavLink Href="/orders" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.ShoppingBag"/>
            <MudNavLink Href="/requests" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.NoteAdd"/>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {

    readonly MudTheme CustomTheme = new()
    {
        Palette = new Palette
        {
            Primary = Colors.Primary,
            Secondary = Colors.Secondary,
            Tertiary = Colors.Tertiary,
            AppbarBackground = "#0087a8"
        },
        PaletteDark = new PaletteDark
        {
            Primary = "#0087a8",
            Secondary = "#bba590",
            Tertiary = "#859d66"
        }
    };

    private bool _isDarkMode;
    private MudThemeProvider _mudThemeProvider;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            StateHasChanged();
        }
    }

}